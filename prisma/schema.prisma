// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource dbModel {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator clientModel {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

// 플랫폼
model PlatformModel {
  platformId String @id @default(uuid())

  name       String
  users      PlatformUserModel[]
  accessKeys PlatformAccessKeyModel[]
  logs       PlatformLogModel[]

  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  deletedAt            DateTime?
  PermissionGroupModel PermissionGroupModel[]
}

// 플랫폼 사용자
model PlatformUserModel {
  platformUserId String @id @default(uuid())

  platformId String
  platform   PlatformModel @relation(fields: [platformId], references: [platformId])

  name  String
  email String
  phone String

  methods PlatformUserMethodModel[]

  permissionGroupId String
  permissionGroup   PermissionGroupModel @relation(fields: [permissionGroupId], references: [permissionGroupId])

  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  deletedAt                DateTime?
  PlatformUserSessionModel PlatformUserSessionModel[]
  PlatformLogModel         PlatformLogModel[]
}

// 플랫폼 로그인 연동 제공자
enum PlatformUserMethodProvider {
  LOCAL // 로컬(이메일, 비밀번호)
}

// 플랫폼 로그인 연동
model PlatformUserMethodModel {
  platformUserMethodId String @id @default(uuid())

  platformUserId String
  platformUser   PlatformUserModel @relation(fields: [platformUserId], references: [platformUserId])

  provider PlatformUserMethodProvider
  identity String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

// 플랫폼 사용자 세션
model PlatformUserSessionModel {
  platformUserSessionId String @id

  platformUserId String
  platformUser   PlatformUserModel @relation(fields: [platformUserId], references: [platformUserId])
  userAgent      String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

// 플랫폼 로그 타입
enum PlatformLogType {
  LOGIN

  USER_CREATE
  USER_MODIFY
  USER_DELETE

  ACCESS_KEY_CREATE
  ACCESS_KEY_MODIFY
  ACCESS_KEY_DELETE

  PERMISSION_GROUP_CREATE
  PERMISSION_GROUP_MODIFY
  PERMISSION_GROUP_DELETE
}

// 플랫폼 사용자 기록
model PlatformLogModel {
  platformLogId String @id @default(uuid())

  platformLogType PlatformLogType

  platformId String
  platform   PlatformModel @relation(fields: [platformId], references: [platformId])

  platformUserId String?
  platformUser   PlatformUserModel? @relation(fields: [platformUserId], references: [platformUserId])

  platformAccessKeyId String?
  platformAccessKey   PlatformAccessKeyModel? @relation(fields: [platformAccessKeyId], references: [platformAccessKeyId])

  message String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

// 플랫폼 접근 키
model PlatformAccessKeyModel {
  isEnabled Boolean @default(true)

  name                    String
  platformAccessKeyId     String @id @default(uuid())
  platformSecretAccessKey String @default(uuid())

  platformId String
  platform   PlatformModel @relation(fields: [platformId], references: [platformId])

  permissionGroupId String
  permissionGroup   PermissionGroupModel @relation(fields: [permissionGroupId], references: [permissionGroupId])

  usedAt           DateTime?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  deletedAt        DateTime?
  PlatformLogModel PlatformLogModel[]
}

// 플랫폼 사용자/어세스 키 권한
model PermissionModel {
  permissionId String @id

  name        String
  description String @default("")

  permissionGroup PermissionGroupModel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 플랫폼 권한 그룹
model PermissionGroupModel {
  permissionGroupId String @id @default(uuid())

  name        String
  description String @default("")

  platformId  String?
  platform    PlatformModel?    @relation(fields: [platformId], references: [platformId])
  permissions PermissionModel[]

  users      PlatformUserModel[]
  accessKeys PlatformAccessKeyModel[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}
